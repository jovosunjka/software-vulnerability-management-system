package com.eds.EDSSolution.utils;

import org.w3c.dom.Document;
import org.xml.sax.SAXException;

import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import java.io.*;

public class Validator {

	@SuppressWarnings("unused")
 	public static void checkWellFormness(File xmlFile) throws ParserConfigurationException, SAXException, IOException {
		InputStream stream = new FileInputStream(xmlFile);
		checkWellFormness(stream);
 	}


	public static void checkWellFormness(String xml) throws ParserConfigurationException, SAXException, IOException {
		InputStream stream = new ByteArrayInputStream(xml.getBytes());
		checkWellFormness(stream);
	}

	private static void checkWellFormness(InputStream xmlStream) throws ParserConfigurationException, SAXException, IOException {

		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		DocumentBuilder builder = factory.newDocumentBuilder();
		Document document = builder.parse(xmlStream);
	}
 
 	public static void checkDiagramValidity(File xmlFile, String schemaLocation) throws SAXException, IOException {
		Source stream = new StreamSource(xmlFile);
	    checkDiagramValidity(stream, schemaLocation);
	}

	public static void checkDiagramValidity(String xml, String schemaLocation) throws SAXException, IOException {
		Source stream = new StreamSource(new StringReader(xml));
		checkDiagramValidity(stream, schemaLocation);
	}

	private static void checkDiagramValidity(Source stream, String schemaLocation) throws SAXException, IOException {
		Source schemaFile = new StreamSource(new File(schemaLocation));

		SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
		Schema schema = factory.newSchema(schemaFile);
		javax.xml.validation.Validator validator = schema.newValidator();

		validator.validate(stream);
	}
 
 	public static void checkAssetDefinitionsValidity(File xmlFile, String schemaLocation) throws SAXException, IOException {
		Source schemaFile = new StreamSource(new File(schemaLocation));
		Source stream = new StreamSource(xmlFile);
		
	    SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
	    Schema schema = factory.newSchema(schemaFile);
	    javax.xml.validation.Validator validator = schema.newValidator();	
	    
        validator.validate(stream);
	}
 
 	public static void checkExploitDefinitionsValidity(File xmlFile, String schemaLocation) throws SAXException, IOException {
 		
		Source schemaFile = new StreamSource(new File(schemaLocation));
		Source stream = new StreamSource(xmlFile);
		
	    SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
	    Schema schema = factory.newSchema(schemaFile);
	    javax.xml.validation.Validator validator = schema.newValidator();	
	    
        validator.validate(stream);
	 }
}