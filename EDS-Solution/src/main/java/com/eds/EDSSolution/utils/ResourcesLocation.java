package com.eds.EDSSolution.utils;

import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.*;

public class ResourcesLocation {

    private static final String LOCATIONS_FILE_PATH = "src\\main\\resources\\locations.txt";

    private static ResourcesLocation instance = null;

    private String schemaLocation;
    private String schemaLocationFolder;
    private String exploitSchema;
    private String rulesLocation;
    private String assetLocation;
    private String assetLocationFolder;
    private String exploitLocation;
    private String exploitLocationFolder;
    private String diagramLocationFolder;
    private String reportLocationFolder;
    private String nvdZipPath;
    private String nvdDataFolder;
    private String tempFilesFolder;
    private String testFile;
    private String xslFo;

    private Map<String, String> parametersMap;

    public ResourcesLocation() {
        parametersMap = new HashMap<String, String>();
        readValues();
        setAllParameters();
    }

    private void readValues() {
        byte[] encoded = null;

        try {
            encoded = Files.readAllBytes(Paths.get(LOCATIONS_FILE_PATH));
        } catch (IOException e) {
            e.printStackTrace();
        }

        String content = new String(encoded, StandardCharsets.UTF_8);
        content = content.replaceAll("\\s+", "");
        String[] parameters = content.split(";");

        for (String parameter : parameters) {
            String[] values = parameter.split("=");
            if (values.length > 1) {
                parametersMap.put(values[0], values[1]);
            }
        }
    }

    private void setAllParameters() {
        String schema = parametersMap.get("schemaLocation");
        String schemaFolder = parametersMap.get("schemaLocationFolder");
        String asset = parametersMap.get("assetLocation");
        String assetFolder = parametersMap.get("assetLocationFolder");
        String exploit = parametersMap.get("exploitLocation");
        String exploitFolder = parametersMap.get("exploitLocationFolder");
        String diagramFolder = parametersMap.get("diagramLocationFolder");
        String reportFolder = parametersMap.get("reportLocationFolder");
        String rulesLocation = parametersMap.get("rulesLocations");
        String nvdZipPath = parametersMap.get("nvdZipPath");
        String nvdDataFolder = parametersMap.get("nvdDataFolder");
        String exploitSchema = parametersMap.get("exploitSchema");
        String tempFilesFolder = parametersMap.get("tempFilesFolder");
        String testFile = parametersMap.get("testFile");
        String xslFo = parametersMap.get("xslFo");

        setSchemaLocation(schema == null ? "" : schema);
        setSchemaLocationFolder(schemaFolder == null ? "" : schemaFolder);
        setExploitSchema(exploitSchema == null ? "" : exploitSchema);
        setAssetLocation(asset == null ? "" : asset);
        setAssetLocationFolder(assetFolder == null ? "" : assetFolder);
        setExploitLocation(exploit == null ? "" : exploit);
        setExploitLocationFolder(exploitFolder == null ? "" : exploitFolder);
        setDiagramLocationFolder(diagramFolder == null ? "" : diagramFolder);
        setReportLocationFolder(reportFolder == null ? "" : reportFolder);
        setRulesLocation(rulesLocation == null ? "" : rulesLocation);
        setNvdZipPath(nvdZipPath == null ? "" : nvdZipPath);
        setNvdDataFolder(nvdDataFolder == null ? "" : nvdDataFolder);
        setTempFilesFolder(tempFilesFolder == null ? "" : tempFilesFolder);
        setTestFile(testFile == null ? "" : testFile);
        setXslFo(xslFo == null ? "" : xslFo);

    }

    public void saveAllParameters() {
        StringBuilder fileContentBuilder = new StringBuilder();

//		fileContentBuilder.append("schemaLocation = " + MainWindow.getInstance().getSchemaLocation() + ";\n");
        fileContentBuilder.append("schemaLocationFolder = " + getSchemaLocationFolder() + ";\n");
//		fileContentBuilder.append("assetLocation = " + MainWindow.getInstance().getAssetLocation() + ";\n");
        fileContentBuilder.append("assetLocationFolder = " + getAssetLocationFolder() + ";\n");
//		fileContentBuilder.append("exploitLocation = " + MainWindow.getInstance().getExploitLocation() + ";\n");
        fileContentBuilder.append("exploitLocationFolder = " + getExploitLocationFolder() + ";\n");
        fileContentBuilder.append("diagramLocationFolder = " + getDiagramLocationFolder() + ";\n");
        fileContentBuilder.append("reportLocationFolder = " + getReportLocationFolder() + ";\n");
        fileContentBuilder.append("reportLocationFolder = " + getRulesLocation() + ";\n");

        BufferedWriter out;
        try {
            out = new BufferedWriter(new FileWriter(LOCATIONS_FILE_PATH));
            out.write(fileContentBuilder.toString());
            out.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    public String getTempFilesFolder() {
        return tempFilesFolder;
    }

    public void setTempFilesFolder(String tempFilesFolder) {
        this.tempFilesFolder = tempFilesFolder;
    }

    public String getTestFile() {
        return testFile;
    }

    public void setTestFile(String testFile) {
        this.testFile = testFile;
    }

    public static ResourcesLocation getInstance() {
        if (instance == null) {
            instance = new ResourcesLocation();
        }
        return instance;
    }

    public String getExploitSchema() {
        return exploitSchema;
    }

    public void setExploitSchema(String exploitSchema) {
        this.exploitSchema = exploitSchema;
    }

    public String getSchemaLocation() {
        return schemaLocation;
    }

    public String getRulesLocation() {
        return rulesLocation;
    }

    public String getAssetLocation() {
        return assetLocation;
    }

    public String getAssetLocationFolder() {
        return assetLocationFolder;
    }

    public String getExploitLocation() {
        return exploitLocation;
    }

    public String getExploitLocationFolder() {
        return exploitLocationFolder;
    }

    public String getDiagramLocationFolder() {
        return diagramLocationFolder;
    }

    public void setSchemaLocation(String schemaLocation) {
        this.schemaLocation = schemaLocation;
    }

    public void setRulesLocation(String rulesLocation) {
        this.rulesLocation = rulesLocation;
    }

    public void setAssetLocation(String assetLocation) {
        this.assetLocation = assetLocation;
    }

    public void setAssetLocationFolder(String assetLocationFolder) {
        this.assetLocationFolder = assetLocationFolder;
    }

    public void setExploitLocation(String exploitLocation) {
        this.exploitLocation = exploitLocation;
    }

    public void setExploitLocationFolder(String exploitLocationFolder) {
        this.exploitLocationFolder = exploitLocationFolder;
    }

    public void setDiagramLocationFolder(String diagramLocationFolder) {
        this.diagramLocationFolder = diagramLocationFolder;
    }

    public String getSchemaLocationFolder() {
        return schemaLocationFolder;
    }

    public void setSchemaLocationFolder(String schemaLocationFolder) {
        this.schemaLocationFolder = schemaLocationFolder;
    }

    public String getReportLocationFolder() {
        return reportLocationFolder;
    }

    public void setReportLocationFolder(String reportLocationFolder) {
        this.reportLocationFolder = reportLocationFolder;
    }

    public String getNvdZipPath() {
        return nvdZipPath;
    }

    public void setNvdZipPath(String nvdZipPath) {
        this.nvdZipPath = nvdZipPath;
    }

    public String getNvdDataFolder() {
        return nvdDataFolder;
    }

    public void setNvdDataFolder(String nvdDataFolder) {
        this.nvdDataFolder = nvdDataFolder;
    }

    public String getXslFo() {
        return xslFo;
    }

    public void setXslFo(String xslFo) {
        this.xslFo = xslFo;
    }
}
